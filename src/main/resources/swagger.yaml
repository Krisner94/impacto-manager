openapi: 3.0.0
info:
  title: Impacto Manager
  description: Sistema de gerenciamento de escola de esportes
  version: v1
servers:
  - url: http://localhost:8080
    description: Generated server url

paths:
  /turma/{id}:
    get:
      tags:
        - Turmas
      summary: Retorna uma turma específica
      operationId: getTurmaById
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Turma'
        '400':
          description: Requisição inválida.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Turma não encontrada.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Erro interno do servidor.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      tags:
        - Turmas
      summary: Atualiza os valores de uma turma existente
      operationId: updateTurma
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Turma'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Turma'
        '400':
          description: Requisição inválida.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Turma não encontrada.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Erro interno do servidor.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      tags:
        - Turmas
      summary: Exclui uma turma existente
      operationId: deleteTurma
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
        '400':
          description: Requisição inválida.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Turma não encontrada.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        '500':
          description: Erro interno do servidor.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /professor/nome/{nome}:
    get:
      tags:
        - Professor
      summary: Buscar professores por nome
      operationId: getProfessorByNome
      parameters:
        - name: nome
          in: header
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Professor'
        '400':
          description: Requisição inválida.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Aluno não encontrado.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Erro interno do servidor.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /professor/{id}:
    put:
      tags:
        - Professor
      summary: Atualiza um professor
      operationId: updateProfessor
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Professor'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Professor'
        '400':
          description: Requisição inválida.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Professor não encontrado.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Erro interno do servidor.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      tags:
        - Professor
      summary: Excluir professor
      operationId: deleteProfessor
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
        '400':
          description: Requisição inválida.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Professor não encontrado.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Erro interno do servidor.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'


  /aluno/nome/{nome}:
    get:
      tags:
        - Alunos
      summary: Buscar alunos por nome
      operationId: getAlunoByNome
      parameters:
        - name: nome
          in: header
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Aluno'
        '400':
          description: Requisição inválida.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Aluno não encontrado.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Erro interno do servidor.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /aluno/cpf/{cpf}:
    get:
      tags:
        - Alunos
      summary: Buscar aluno por CPF
      operationId: getAlunoByCpf
      parameters:
        - name: cpf
          in: header
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Aluno'
        '400':
          description: Requisição inválida.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Aluno não encontrado.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Erro interno do servidor.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /aluno/{id}:
    put:
      tags:
        - Alunos
      summary: Editar dados
      operationId: updateAluno
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Aluno'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Aluno'
        '400':
          description: Requisição inválida.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Aluno não encontrado.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Erro interno do servidor.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      tags:
        - Alunos
      summary: Exclui aluno
      operationId: deleteAluno
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
        '400':
          description: Requisição inválida.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Aluno não encontrado.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Erro interno do servidor.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /turma:
    get:
      tags:
        - Turmas
      summary: Retorna todas as turmas
      operationId: getAllTurmas
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Turma'
        '500':
          description: Erro interno do servidor.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    post:
      tags:
        - Turmas
      summary: Cria uma nova turma
      operationId: createTurma
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Turma'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Turma'
        '400':
          description: Requisição inválida.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Erro interno do servidor.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /professor:
    get:
      tags:
        - Professor
      summary: Busca todos os professores existentes
      operationId: getAllProfessores
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Professor'
        '500':
          description: Erro interno do servidor.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    post:
      tags:
        - Professor
      summary: Adiciona um professor
      operationId: createProfessor
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Professor'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Professor'
        '400':
          description: Requisição inválida.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Erro interno do servidor.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /aluno:
    get:
      tags:
        - Alunos
      summary: Buscar alunos
      operationId: getAllAlunos
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Aluno'
        '500':
          description: Erro interno do servidor.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    post:
      tags:
        - Alunos
      summary: Novo Aluno
      operationId: createAluno
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Aluno'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Aluno'
        '400':
          description: Requisição inválida.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Erro interno do servidor.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

components:
  schemas:
    Aluno:
      type: object
      properties:
        id:
          type: string
        nome:
          type: string
        cpf:
          type: string
        sexo:
          type: string
          enum:
            - MASCULINO
            - FEMININO
        dataNascimento:
          type: string
          format: date
        telefone:
          type: string
        endereco:
          $ref: "#/components/schemas/Endereco"
        responsavel:
          type: array
          items:
            $ref: '#/components/schemas/Responsavel'


    Responsavel:
      type: object
      properties:
        nome:
          type: string
        parentesco:
          type: string
        telefone:
          type: string

    Endereco:
      type: object
      properties:
        cep:
          type: string
        rua:
          type: string
        bairro:
          type: string
        cidade:
          type: string
        numeroCasa:
          type: string
        complemento:
          type: string

    Professor:
      type: object
      properties:
        id:
          type: string
        nome:
          type: string
        turma:
          type: array
          items: 
            $ref: '#/components/schemas/Turma'

    Turma:
      type: object
      properties:
        id:
          type: string
        nome:
          type: string
        periodo:
          type: string
          enum:
            - MANHA
            - TARDE
            - NOITE
        diaDeAula:
          type: array
          items:
            $ref: '#/components/schemas/DiaDeAula'
        horarioAula:
          type: array
          items:
            $ref: '#/components/schemas/HorarioAula'
        alunos:
          type: array
          items:
            $ref: '#/components/schemas/Aluno'
        professores:
          type: array
          items:
            $ref: '#/components/schemas/Professor'

    DiaDeAula:
      type: object
      properties:
        dia:
          type: string

    HorarioAula:
      type: object
      properties:
        horarioInicio:
          type: string
        horarioFim:
          type: string

    ErrorResponse:
      type: object
      properties:
        status:
          type: integer
          description: Código de status HTTP.
          example: 400
        message:
          type: string
          description: Mensagem de erro descritiva.
          example: "Dados inválidos fornecidos"
        timestamp:
          type: string
          format: date-time
          description: Data e hora em que o erro ocorreu.
          example: "2023-10-25T14:30:00Z"
        path:
          type: string
          description: Caminho da requisição que causou o erro.
          example: "/aluno"